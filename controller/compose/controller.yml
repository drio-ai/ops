services:
  configdb:
    image: ${CONFIGDB_IMAGE}:${CONFIGDB_VERSION}
    container_name: postgres
    restart: always
    user: postgres
    secrets:
      - configdb-password
    volumes:
      - ctrl_configdb_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=example
      - POSTGRES_PASSWORD_FILE=/run/secrets/configdb-password
      - VAULT_ADDR=http://vault:8200
    env_file:
      - ../../vault/compose/tokens/drio-controller/drio-controller-role.env
    expose:
      - 5432
    networks:
      - ctrl_internal
      - ctrl_vaultnet
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  apiservice:
    image: ${APISERVICE_IMAGE}:${APISERVICE_VERSION}
    container_name: apiservice
    command:
      - --deployment=${APISERVICE_DEPLOYMENT_TYPE}
    restart: always
    volumes:
      - ../../vault/compose/tokens/drio-controller/drio-controller-role.env:/etc/apiservice/drio-controller-role.env:ro
    networks:
      - ctrl_internal
      - ctrl_vaultnet
    expose:
      - 8080
      - 8443
    ports:
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:8443:8443"
    depends_on:
      configdb:
        condition: service_healthy
      apiservice-init:
        condition: service_completed_successfully
    links:
      - configdb
    healthcheck:
      test: [ "CMD", "/etc/apiservice/bin/status.sh", "${APISERVICE_DEPLOYMENT_TYPE}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  apiservice-init:
    image: ${APISERVICE_IMAGE}:${APISERVICE_VERSION}
    container_name: apiservice-init
    command:
      - --init-only
      - --deployment=${APISERVICE_DEPLOYMENT_TYPE}
    restart: "no"
    volumes:
      - ../../vault/compose/tokens/drio-controller/drio-controller-role.env:/etc/apiservice/drio-controller-role.env:ro
    networks:
      - ctrl_internal
      - ctrl_vaultnet
    expose:
      - 8080
      - 8443
    depends_on:
      configdb:
        condition: service_healthy
    links:
      - configdb

volumes:
  ctrl_configdb_data:
    name: configdb_data

secrets:
  configdb-password:
    file: configdb/password

networks:
  ctrl_external:
    name: extnet
  ctrl_internal:
    name: intnet
    external: true
  ctrl_vaultnet:
    name: vaultnet
    external: true
